"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.iOSPlugin = void 0;
const config_plugins_1 = require("@expo/config-plugins");
const generateCode_1 = require("@expo/config-plugins/build/utils/generateCode");
const iOSPlugin = (config, props = {}) => {
    config = applyAppDelegate(config, props);
    return config;
};
exports.iOSPlugin = iOSPlugin;
const applyAppDelegate = (config, props) => {
    return (0, config_plugins_1.withAppDelegate)(config, (config) => {
        config.modResults.contents = applyDidFinishLaunchingWithOptions(config.modResults.contents);
        config.modResults.contents = applyAppDelegateImport(config.modResults.contents);
        return config;
    });
};
const applyDidFinishLaunchingWithOptions = (src) => {
    let newSrc = [];
    newSrc.push("  [[TSBackgroundFetch sharedInstance] didFinishLaunching];");
    newSrc = newSrc.filter(Boolean);
    return (0, generateCode_1.mergeContents)({
        tag: "react-native-background-fetch-didFinishLaunchingWithOptions",
        src,
        newSrc: newSrc.join("\n"),
        anchor: "didFinishLaunchingWithOptions:launchOptions];",
        offset: -1,
        comment: "//",
    }).contents;
};
const applyAppDelegateImport = (src) => {
    const newSrc = [];
    newSrc.push("#import <TSBackgroundFetch/TSBackgroundFetch.h>");
    return (0, generateCode_1.mergeContents)({
        tag: "react-native-background-fetch-import",
        src,
        newSrc: newSrc.join("\n"),
        anchor: /#import "AppDelegate\.h"/,
        offset: 1,
        comment: "//",
    }).contents;
};
exports.default = exports.iOSPlugin;
//# sourceMappingURL=iOSPlugin.js.map